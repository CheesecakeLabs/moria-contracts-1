{"version":3,"sources":["../../app/javascripts/api.js"],"names":["web3","providers","HttpProvider","MoriaToken","setProvider","currentProvider","accounts","account","setAccounts","eth","getAccounts","err","accs","alert","length","isAddress","address","test","isChecksumAddress","replace","addressHash","sha3","toLowerCase","i","parseInt","toUpperCase","module","exports","init","getBalance","token","decimals","deployed","then","instance","value","balance","balanceOf","call","from","Math","pow","catch","e","getTotalTokens","console","log","total","totalSupply","getOutstandingDividends","outstandingFor","payOutstandingDividends","callback","claimDividendsFor","mintTokens","amount","rawAmount","mint"],"mappings":"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","file":"api.js","sourcesContent":["import { default as Web3} from 'web3';\n\nimport { default as contract } from 'truffle-contract'\n\nimport MoriaTokenSol from '../../build/contracts/MoriaToken.json'\n\nvar web3 = new Web3(new Web3.providers.HttpProvider(\"http://localhost:8545\"));\nvar MoriaToken = contract(MoriaTokenSol);\nMoriaToken.setProvider(web3.currentProvider);\n\nvar accounts;\nvar account;\n\nvar setAccounts = function() {\n  web3.eth.getAccounts(function(err, accs) {\n    if (err != null) {\n      alert(\"There was an error fetching your accounts.\");\n      return;\n    }\n    \n    if (accs.length == 0) {\n      alert(\"Couldn't get any accounts! Make sure your Ethereum client is configured correctly.\");\n      return;\n    }\n    \n    accounts = accs;\n    account = accounts[0]; \n  });\n}\n\nvar isAddress = function(address) {\n  if (!/^(0x)?[0-9a-f]{40}$/i.test(address)) {\n    // check if it has the basic requirements of an address\n    return false;\n  } else if (/^(0x)?[0-9a-f]{40}$/.test(address) || /^(0x)?[0-9A-F]{40}$/.test(address)) {\n    // If it's all small caps or all all caps, return true\n    return true;\n  } else {\n    // Otherwise check each case\n    return isChecksumAddress(address);\n  }\n}\n\nvar isChecksumAddress = function(address) {\n  // Check each case\n  address = address.replace('0x','');\n  var addressHash = sha3(address.toLowerCase());\n  for (var i = 0; i < 40; i++ ) {\n    // the nth letter should be uppercase if the nth digit of casemap is 1\n    if ((parseInt(addressHash[i], 16) > 7 && address[i].toUpperCase() !== address[i]) || (parseInt(addressHash[i], 16) <= 7 && address[i].toLowerCase() !== address[i])) {\n      return false;\n    }\n  }\n  return true;\n}\n\nmodule.exports = {\n\n  init : function() {\n    setAccounts();\n  },\n\n  getBalance : function(address) {\n\n    setAccounts();\n    \n    var token;\n    var decimals;\n\n    return MoriaToken.deployed().then(function(instance) {\n      token = instance;\n      return token.decimals();\n    }).then(function(value) {\n      decimals = value;\n      var balance = token.balanceOf.call(address, {from: account});\n      return balance;\n    }).then(function(value) {\n      return value / Math.pow(10, decimals);\n    }).catch(function(e) {\n      return -1;\n    });   \n  },\n\n  getTotalTokens : function() {\n    var token;\n    var decimals;\n    return MoriaToken.deployed().then(function(instance) {\n      token = instance;\n      return token.decimals();\n    }).then(function(value) {\n      decimals = value;\n      console.log(\"decs = \" + decimals);\n      var total = token.totalSupply.call({from: account});\n      return total;\n    }).then(function (value) {\n      return value / Math.pow(10, decimals);\n    }).catch(function(e) {\n      console.log(e);\n      return -1;\n    });\n  },\n\n  getOutstandingDividends : function(address) {\n    setAccounts();\n\n    return MoriaToken.deployed().then(function(instance) {\n      return instance.outstandingFor.call(address, {from: account})\n    })\n  },\n\n  payOutstandingDividends : function(address, callback) {\n    setAccounts();\n    var token;\n    return MoriaToken.deployed().then(function(instance) {\n      return instance.claimDividendsFor(address, {from: account});\n    }).then(function(value) {\n      callback(value);\n      return value;\n    })\n  },\n\n  mintTokens : function(address, amount, callback) {\n    setAccounts();\n\n    var token;\n    var decimals;\n    return MoriaToken.deployed().then(function(instance) {\n      token = instance;\n      return token.decimals();\n    }).then(function(value) {\n      decimals = value;\n      var rawAmount = amount * Math.pow(10, decimals);\n      return token.mint(address, rawAmount, {from: account})\n    }).then(function(value) {\n      callback(value);\n      return value\n    });    \n  }\n}\n"]}