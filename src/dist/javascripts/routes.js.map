{"version":3,"sources":["../../app/javascripts/routes.js"],"names":["request","require","express","bodyParser","app","lockExpiry","paymentLock","lockAddress","address","Date","now","unlockAddress","isLocked","undefined","use","urlencoded","extended","json","api","init","get","req","res","send","getBalance","params","then","result","getTotalTokens","getOutstandingDividends","payOutstandingDividends","value","console","log","post","body","callback","created","completed","error","response","statusCode","amount","mintTokens","minted","dividendHistory","history","historyObj","i","length","add","listen"],"mappings":";;AAAA,IAAMA,UAAUC,QAAQ,SAAR,CAAhB;AACA,IAAMC,UAAUD,QAAQ,SAAR,CAAhB;AACA,IAAME,aAAaF,QAAQ,aAAR,CAAnB;AACA,IAAMG,MAAMF,SAAZ;;AAEA,IAAIG,aAAa,OAAO,EAAxB,C,CAA4B;AAC5B,IAAIC,cAAc,EAAlB;;AAEA,IAAIC,cAAc,SAAdA,WAAc,CAASC,OAAT,EAAkB;AAClCF,cAAYE,OAAZ,IAAuBC,KAAKC,GAAL,KAAaL,UAApC;AACD,CAFD;;AAIA,IAAIM,gBAAgB,SAAhBA,aAAgB,CAASH,OAAT,EAAkB;AACpCF,cAAYE,OAAZ,IAAuB,CAAvB;AACD,CAFD;;AAIA,IAAII,WAAW,SAAXA,QAAW,CAASJ,OAAT,EAAkB;AAC/B,MAAIF,YAAYE,OAAZ,KAAwBK,SAA5B,EAAuC;AACrC,WAAO,KAAP;AACD;AACD,SAAOP,YAAYE,OAAZ,KAAwBC,KAAKC,GAAL,EAA/B;AACD,CALD;;AAOAN,IAAIU,GAAJ,CAAQX,WAAWY,UAAX,CAAsB,EAAEC,UAAU,IAAZ,EAAtB,CAAR;AACAZ,IAAIU,GAAJ,CAAQX,WAAWc,IAAX,EAAR;;AAEA,IAAIC,MAAMjB,QAAQ,UAAR,CAAV;AACAiB,IAAIC,IAAJ;;AAEAf,IAAIgB,GAAJ,CAAQ,GAAR,EAAa,UAACC,GAAD,EAAMC,GAAN;AAAA,SAAcA,IAAIC,IAAJ,CAAS,cAAT,CAAd;AAAA,CAAb;;AAEAnB,IAAIgB,GAAJ,CAAQ,uBAAR,EAAiC,UAACC,GAAD,EAAMC,GAAN;AAAA,SACzBJ,IAAIM,UAAJ,CAAeH,IAAII,MAAJ,CAAW,SAAX,CAAf,EAAsCC,IAAtC,CAA2C,UAASC,MAAT,EAAiB;AAC1DL,QAAIC,IAAJ,CAAS,EAAC,SAAUI,MAAX,EAAT;AACD,GAFD,CADyB;AAAA,CAAjC;;AAKAvB,IAAIgB,GAAJ,CAAQ,YAAR,EAAsB,UAACC,GAAD,EAAMC,GAAN;AAAA,SACdJ,IAAIU,cAAJ,GAAqBF,IAArB,CAA0B,UAASC,MAAT,EAAiB;AACzCL,QAAIC,IAAJ,CAAS,EAAC,SAAUI,MAAX,EAAT;AACD,GAFD,CADc;AAAA,CAAtB;;AAKAvB,IAAIgB,GAAJ,CAAQ,yBAAR,EAAmC,UAACC,GAAD,EAAMC,GAAN;AAAA,SAC3BJ,IAAIW,uBAAJ,CAA4BR,IAAII,MAAJ,CAAW,SAAX,CAA5B,EAAmDC,IAAnD,CAAwD,UAASC,MAAT,EAAiB;AACvEL,QAAIC,IAAJ,CAAS,EAAC,QAASI,MAAV,EAAT;AACD,GAFD,CAD2B;AAAA,CAAnC;;AAKAvB,IAAIgB,GAAJ,CAAQ,mBAAR,EAA6B,UAACC,GAAD,EAAMC,GAAN,EAAc;AACzC,MAAGV,SAASS,IAAII,MAAJ,CAAW,SAAX,CAAT,CAAH,EAAoC,CAEnC;AACDP,MAAIY,uBAAJ,CAA4BT,IAAII,MAAJ,CAAW,SAAX,CAA5B,EAAmD,UAAUM,KAAV,EAAiB;AAACC,YAAQC,GAAR,CAAYF,KAAZ;AAAoB,GAAzF,EAA4FL,IAA5F,CAAiG,UAASC,MAAT,EAAiB;AAChHL,QAAIC,IAAJ,CAASI,MAAT;AACD,GAFD;AAGD,CAPD;;AAUAvB,IAAI8B,IAAJ,CAAS,WAAT,EAAsB,UAACb,GAAD,EAAMC,GAAN,EAAc;AAClC,MAAIG,SAASJ,IAAIc,IAAjB;AACA,MAAI3B,UAAUiB,OAAO,SAAP,CAAd;AACA,MAAIW,WAAWX,OAAO,UAAP,CAAf;AACA,MAAIY,UAAU5B,KAAKC,GAAL,EAAd;AACA,MAAI4B,YAAY,CAAhB;;AAEAN,UAAQC,GAAR,CAAY,eAAezB,OAAf,GAAyB,cAAzB,GAA0C4B,QAAtD;;AAEAlB,MAAIY,uBAAJ,CAA4BtB,OAA5B,EAAqC,UAASuB,KAAT,EAAgB;AACnDC,YAAQC,GAAR,CAAY,uBAAZ;AACAD,YAAQC,GAAR,CAAYF,KAAZ;AACAO,gBAAY7B,KAAKC,GAAL,EAAZ;AACD,GAJD,EAIGgB,IAJH,CAIQ,UAASC,MAAT,EAAiB;AACvBK,YAAQC,GAAR,CAAY,iBAAiBG,QAA7B;AACApC,YAAQkC,IAAR,CAAaE,QAAb,EACa,EAACD,MAAM;AACL,qBAAeG,SADV;AAEL,mBAAYX,MAFP;AAGL,mBAAaU,OAHR,EAAP;AAICpB,YAAM,IAJP,EADb,EAMa,UAAUsB,KAAV,EAAiBC,QAAjB,EAA2BL,IAA3B,EAAiC;AAC/B,UAAI,CAACI,KAAD,IAAUC,SAASC,UAAT,IAAuB,GAArC,EAA0C;AACxCT,gBAAQC,GAAR,CAAYE,IAAZ;AACD;AACF,KAVd;AAWAb,QAAIC,IAAJ,CAAS,KAAT;AACD,GAlBD;AAkBG,CA3BL;;AA8BAnB,IAAIgB,GAAJ,CAAQ,4BAAR,EAAsC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAClD,MAAId,UAAUa,IAAII,MAAJ,CAAW,SAAX,CAAd;AACA,MAAIiB,SAASrB,IAAII,MAAJ,CAAW,QAAX,CAAb;AACAP,MAAIyB,UAAJ,CAAenC,OAAf,EAAwBkC,MAAxB,EAAgC,UAAUE,MAAV,EAAkB;AAChDZ,YAAQC,GAAR,CAAY,cAAcW,MAA1B;AAAkC,GADpC,EACsClB,IADtC,CAC2C,UAASC,MAAT,EAAiB;AACxDL,QAAIC,IAAJ,CAASI,MAAT;AACD,GAHH;AAGK,CANP;;AAQAvB,IAAI8B,IAAJ,CAAS,gBAAT,EAA2B,UAACb,GAAD,EAAMC,GAAN,EAAc;AACvCU,UAAQC,GAAR,CAAY,kBAAZ;AACAX,MAAIC,IAAJ,CAASF,IAAIc,IAAb;AACD,CAHD;;AAKA/B,IAAI8B,IAAJ,CAAS,4BAAT,EAAuC,UAACb,GAAD,EAAMC,GAAN,EAAc,CAAE,CAAvD;;AAEAlB,IAAIgB,GAAJ,CAAQ,wBAAR,EAAkC,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC9CJ,MAAI2B,eAAJ,CAAoBxB,IAAII,MAAJ,CAAW,SAAX,CAApB,EAA2CC,IAA3C,CAAgD,UAASoB,OAAT,EAAkB;AAChE,QAAIC,aAAa,EAAjB;AACAf,YAAQC,GAAR,CAAY,yBAAZ;AACA,SAAI,IAAIe,IAAI,CAAZ,EAAeA,IAAIF,QAAQG,MAA3B,EAAmCD,GAAnC,EAAwC;AACtChB,cAAQC,GAAR,CAAY,qBAAZ;AACAc,iBAAWG,GAAX,CAAe,EAAC,MAAOF,CAAR;AACC,kBAAW,CADZ;AAEC,kBAAWxC,OAFZ,EAAf;AAGD;AACDwB,YAAQC,GAAR,CAAYc,UAAZ;AACAzB,QAAIC,IAAJ,CAASwB,UAAT;AACD,GAXD;AAYD,CAbD;;AAeA3C,IAAI+C,MAAJ,CAAW,IAAX,EAAiB;AAAA,SAAMnB,QAAQC,GAAR,CAAY,0BAAZ,CAAN;AAAA,CAAjB","file":"routes.js","sourcesContent":["const request = require('request');\nconst express = require('express')\nconst bodyParser = require('body-parser');\nconst app = express()\n\nvar lockExpiry = 1000 * 20; // 20 seconds\nvar paymentLock = {};\n\nvar lockAddress = function(address) {\n  paymentLock[address] = Date.now() + lockExpiry;\n}\n\nvar unlockAddress = function(address) {\n  paymentLock[address] = 0;\n}\n\nvar isLocked = function(address) {\n  if (paymentLock[address] == undefined) {\n    return false;\n  }\n  return paymentLock[address] >= Date.now();\n}\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json())\n\nvar api = require(\"./api.js\")\napi.init();\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.get('/api/balance/:address', (req, res) => \n        api.getBalance(req.params[\"address\"]).then(function(result) {\n          res.send({\"total\" : result});\n        }));\n\napp.get('/api/total', (req, res) => \n        api.getTotalTokens().then(function(result) {\n          res.send({\"total\" : result});          \n        }));\n\napp.get('/api/dividends/:address', (req, res) =>\n        api.getOutstandingDividends(req.params[\"address\"]).then(function(result) {\n          res.send({\"owed\" : result});\n        }));\n\napp.get('/api/pay/:address', (req, res) => {\n  if(isLocked(req.params[\"address\"])) {\n    \n  }\n  api.payOutstandingDividends(req.params[\"address\"], function (value) {console.log(value);} ).then(function(result) {\n    res.send(result);\n  })\n}\n       );\n\napp.post('/api/pay/', (req, res) => {\n  var params = req.body;\n  var address = params['address'];\n  var callback = params['callback'];\n  var created = Date.now();\n  var completed = 0;\n\n  console.log(\"address = \" + address + \" callback = \" + callback);\n\n  api.payOutstandingDividends(address, function(value) {\n    console.log(\"pay dividend callback\");\n    console.log(value);\n    completed = Date.now();\n  }).then(function(result) {\n    console.log(\"posting to: \" + callback);\n    request.post(callback,\n                 {body: {\n                   \"completed\" :  completed,\n                   \"success\" : result,\n                   \"created\" :  created},\n                  json: true},\n                 function (error, response, body) {\n                   if (!error && response.statusCode == 200) {\n                     console.log(body)\n                   }\n                 });\n    res.send(\"OK!\");\n  })});\n\n\napp.get('/api/mint/:address/:amount', (req, res) => {\n  var address = req.params[\"address\"];\n  var amount = req.params[\"amount\"];\n  api.mintTokens(address, amount, function (minted) {\n    console.log(\"minted = \" + minted)}).then(function(result) {\n      res.send(result);\n    })});\n\napp.post('/test/callback', (req, res) => {\n  console.log(\"test callback...\");\n  res.send(req.body);\n});\n\napp.post('/api/mint/:address/:amount', (req, res) => {});\n\napp.get('/api/history/:address/', (req, res) => {\n  api.dividendHistory(req.params[\"address\"]).then(function(history) {\n    var historyObj = [];\n    console.log('constructing history...');\n    for(var i = 0; i < history.length; i++) {\n      console.log('adding history data');\n      historyObj.add({'id' : i,\n                      'amount' : 0,\n                      'wallet' : address});\n    }\n    console.log(historyObj);\n    res.send(historyObj);\n  });\n});\n\napp.listen(3000, () => console.log('API active on port 3000!'))\n"]}