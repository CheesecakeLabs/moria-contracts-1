{"version":3,"sources":["../../app/javascripts/routes.js"],"names":["request","require","express","bodyParser","app","use","urlencoded","extended","json","api","init","get","req","res","send","getBalance","params","then","result","getTotalTokens","getOutstandingDividends","payOutstandingDividends","value","console","log","post","body","address","callback","created","Date","now","completed","error","response","statusCode","amount","mintTokens","minted","payDividend","transfer","claimedTo","_claimedTo","dividendHistory","history","historyObj","i","length","withdrawal","push","accountBalance","r","lock","unlock","listen"],"mappings":"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","file":"routes.js","sourcesContent":["const request = require('request');\nconst express = require('express')\nconst bodyParser = require('body-parser');\nconst app = express()\n\napp.use(bodyParser.urlencoded({ extended: true }));\napp.use(bodyParser.json())\n\nvar api = require(\"./api.js\")\napi.init();\n\napp.get('/', (req, res) => res.send('Hello World!'))\n\napp.get('/api/balance/:address', (req, res) => \n        api.getBalance(req.params[\"address\"]).then(function(result) {\n          res.send({\"total\" : result});\n        }));\n\napp.get('/api/total', (req, res) => \n        api.getTotalTokens().then(function(result) {\n          res.send({\"total\" : result});          \n        }));\n\napp.get('/api/dividends/:address', (req, res) =>\n        api.getOutstandingDividends(req.params[\"address\"]).then(function(result) {\n          res.send({\"owed\" : result});\n        }));\n\napp.get('/api/pay/:address', (req, res) => {\n  api.payOutstandingDividends(req.params[\"address\"], function (value) {console.log(value);} ).then(function(result) {\n    console.log(\"executed\");\n  })\n  res.send(\"submitted\");\n});\n\napp.post('/api/pay/', (req, res) => {\n  var params = req.body;\n  var address = params['address'];\n  var callback = params['callback'];\n  var created = Date.now();\n  var completed = 0;\n\n  console.log(\"address = \" + address + \" callback = \" + callback);\n\n  api.payOutstandingDividends(address, function(value) {\n    console.log(\"pay dividend callback\");\n    console.log(value);\n    completed = Date.now();\n  }).then(function(result) {\n    console.log(\"posting to: \" + callback);\n    request.post(callback,\n                 {body: {\n                   \"completed\" :  completed,\n                   \"success\" : result,\n                   \"created\" :  created,\n                   \"address\" : address},\n                  json: true},\n                 function (error, response, body) {\n                   if (!error && response.statusCode == 200) {\n                     console.log(body)\n                   } else {\n                     console.log(error)\n                   }\n                 });\n    res.send(\"OK!\");\n  })});\n\n\napp.get('/api/mint/:address/:amount', (req, res) => {\n  var address = req.params[\"address\"];\n  var amount = req.params[\"amount\"];\n  api.mintTokens(address, amount, function (minted) {\n    console.log(\"minted = \" + minted)}).then(function(result) {\n      res.send(result);\n    })});\n\napp.post('/test/callback', (req, res) => {\n  console.log(\"test callback...\");\n  res.send(req.body);\n});\n\napp.get('/test/dividend/:amount', (req, res) => {\n  api.payDividend(req.params[\"amount\"]).then(function(result) {\n    res.send(result);\n  });\n});\n\napp.get('/test/transfer/:to/:amount', (req, res) => {\n  api.transfer(req.params[\"to\"], req.params[\"amount\"]).then(function(result) {\n    res.send(result);\n  });\n});\n\napp.post('/api/mint/:address/:amount', (req, res) => {});\n\napp.get('/api/history/:address/', (req, res) => {\n  var claimedTo;\n  api.claimedTo(req.params[\"address\"]).then(function(_claimedTo) {\n    claimedTo = _claimedTo;\n    return api.dividendHistory(req.params[\"address\"]);\n  }).then(function(history) {\n    var historyObj = [];\n    console.log('claimed to ' + claimedTo);\n    for(var i = 0; i < history.length; i++) {\n      var withdrawal = 0;\n      if(i < claimedTo) {\n        withdrawal = Date.now();\n      }\n      console.log('adding history data');\n      if (history[i][\"amount\"] != null) {\n        historyObj.push({'id' : i,\n                         'amount' : history[i][\"amount\"],\n                         'date' : history[i][\"date\"],\n                         'withdrawal_date' : withdrawal,\n                         'wallet' : req.params[\"address\"]});\n      } \n    }\n    console.log(historyObj);\n    res.send(historyObj);\n  });\n});\n\napp.get('/api/ac/:address', (req, res) => {\n  api.accountBalance(req.params[\"address\"]).then(function(r) {\n    res.send(r);\n  });\n});\n\napp.get('/api/lock/:address', (req, res) => {\n  api.lock(req.params[\"address\"]).then(function(r) {\n    res.send(r);\n  });\n});\n\napp.get('/api/unlock/:address', (req, res) => {\n  api.unlock(req.params[\"address\"]).then(function(r) {\n    res.send(r);\n  });\n});\n\napp.listen(3000, () => console.log('API active on port 3000!'))\n\n"]}